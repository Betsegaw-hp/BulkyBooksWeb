@model Book
@{
    ViewData["Title"] = @Model.Title + " | Book Detail";
}

<div class="container">
    <div class="card border-dark">
        <div class="card-header bg-dark text-white">
            <h2>@Model.Title</h2>
        </div>
        <div class="card-body">
            <div class="row">
                <!-- Cover Image Column -->
                <div class="col-md-4 mb-4">
                    @if (!string.IsNullOrEmpty(Model.CoverImageUrl))
                    {
                        <img src="@Model.CoverImageUrl" alt="Cover of @Model.Title" class="img-fluid rounded border border-dark" style="max-height: 400px; width: 100%; object-fit: cover;" />
                    }
                    else
                    {
                        <div class="border border-dark rounded d-flex justify-content-center align-items-center bg-light" style="height: 300px;">
                            <div class="text-center p-4">
                                <i class="fas fa-book fa-4x text-muted mb-3"></i>
                                <p class="text-muted">No cover image available</p>
                            </div>
                        </div>
                    }
                    <div class="mt-3 text-center">
                        <h4 class="text-primary">$@Model.Price.ToString("0.00")</h4>
                    </div>
                </div>
                
                <!-- Book Information Column -->
                <div class="col-md-8">
                    <h3>Book Information</h3>
                    <div class="row mb-3">
                        <div class="col-md-3 fw-bold">Author:</div>
                        <div class="col-md-9">@Model.Author.FullName - (@Model.Author.UserName)</div>
                    </div>
                    <div class="row mb-3">
                        <div class="col-md-3 fw-bold">Published Date:</div>
                        <div class="col-md-9">@Model.PublishedDate.ToLocalTime()</div>
                    </div>
                    <div class="row mb-3">
                        <div class="col-md-3 fw-bold">Category:</div>
                        <div class="col-md-9">
                            @if(User.IsInRole("Admin") || User.IsInRole("Author"))
                            {
                                <a asp-controller="Category" asp-action="Detail" asp-route-id="@Model.CategoryId" class="btn btn-primary btn-sm">
                                    @Model.Category?.Name
                                </a>
                            }
                            else
                            {
                                <span class="badge bg-primary">@Model.Category?.Name</span>
                            }
                        </div>
                    </div>
                    <div class="row mb-3">
                        <div class="col-md-3 fw-bold">ISBN:</div>
                        <div class="col-md-9">@(string.IsNullOrEmpty(Model.ISBN) ? "N/A" : Model.ISBN)</div>
                    </div>
                    <div class="row mb-3">
                        <div class="col-md-3 fw-bold">Description:</div>
                        <div class="col-md-9">@(string.IsNullOrEmpty(Model.Description) ? "No description available." : Model.Description)</div>
                    </div>
                </div>
            </div>
            
            <hr class="my-4" style="border-style: dashed;">
            
            <div class="d-flex justify-content-between mt-4">
                <div>
                    <button class="btn btn-outline-primary btn-sm add-to-cart" data-book-id="@Model.Id">
                        <i class="fas fa-shopping-cart me-1"></i> Add to Cart
                    </button>
                    @if(User.IsInRole("Admin") || User.IsInRole("Author"))
                    {
                        <a asp-controller="Book" asp-action="Index" class="btn btn-secondary">Back to List</a>
                    }
                    else
                    {
                        <a asp-controller="Home" asp-action="Index" class="btn btn-secondary">Back to Home</a>
                    }
                </div>
                @if(!User.IsInRole("user"))
                {
                <div>
                    <a asp-controller="Book" asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-primary">Edit</a>
                    <form asp-controller="Book" asp-action="Delete" asp-route-id="@Model.Id" method="post" class="d-inline">
                        <button type="submit" class="btn btn-danger" onclick="return confirm('Are you sure you want to delete this book?')">Delete</button>
                    </form>
                </div>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
           $('.add-to-cart').click(function() {
                var bookId = $(this).data('book-id');
                $.ajax({
                    url: '@Url.Action("AddToCart", "Home")',
                    type: 'POST',
                    data: { 
                        id: bookId,
                        ajax: true
                    },
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                    success: function(response) {
                        if (response.success) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Added to Cart!',
                                text: `"${response.bookTitle}" has been added to your cart.`,
                                timer: 2000,
                                showConfirmButton: false,
                                toast: true,
                                position: 'top-end',
                                customClass: {
                                    container: 'swal2-top-end-container'
                                },
                                didOpen: (toast) => {
                                    toast.style.zIndex = '9999';
                                }
                            });
                            
                            // Update cart count in real-time
                            if (typeof updateCartCount === 'function') {
                                updateCartCount();
                            }
                        }
                    },
                    error: function(xhr, status, error) {
                        if (xhr.status === 403 || xhr.status === 401) {
                            Swal.fire({
                                icon: 'warning',
                                title: 'Login Required',
                                text: 'Please login to add items to cart.',
                                confirmButtonText: 'Login Now',
                                showCancelButton: true
                            }).then((result) => {
                                if (result.isConfirmed) {
                                    window.location.href = '@Url.Action("Login", "Auth")';
                                }
                            });
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: 'Failed to add book to cart. Please try again.',
                                confirmButtonText: 'OK'
                            });
                        }
                    }
                });
            });
        });
    </script>
}