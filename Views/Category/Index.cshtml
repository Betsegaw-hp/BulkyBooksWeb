@model IEnumerable<Category>
@{
    ViewData["Title"] = "Category List";
}

<div class="text-center">
    <h1 class="display-4">Category List</h1>
    <p>Welcome to the Category List page. Here you can view all the categories available in our system.</p>
    <button type="button" class="btn btn-success mb-3" style="float: right;" data-bs-toggle="modal" data-bs-target=".modal-create-category">
        Create Category
    </button>
    <table class="table table-striped table-hover table-bordered">
        <thead class="table-dark">
            <tr>
                <th>ID</th>
                <th>Name</th>
                <th>Display Order</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var category in Model)
            {
                <tr>
                    <td width="20%">@category.Id</td>
                    <td width="40%">
                        <a asp-controller="Category" asp-action="Detail" asp-route-id="@category.Id" class="btn btn-info btn-sm">
                            @category.Name
                        </a>
                    </td>
                    <td width="20%">@category.DisplayOrder</td>
                    <td width="20%">
                        <a asp-controller="Category" asp-action="Detail" asp-route-id="@category.Id" class="btn btn-primary btn-sm edit-button">Edit</a>
                        <form asp-controller="Category" asp-action="Delete" asp-route-id="@category.Id" method="post" class="d-inline">
                            <button type="submit" class="btn btn-danger btn-sm">Delete</button>
                        </form>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <!-- Include the partial view for the modal -->
    @await Html.PartialAsync("_CreateCategoryModal", new Category())
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
	<script>
		document.getElementById("categoryName").addEventListener("blur", async function(e) {
			try {
				const res = await fetch(`/Category/IsCategoryNameUnique?name=${this.value}`);

				if (!res.ok) {
					throw new Error("Network response was not ok");
				}
				const isUnique = await res.json();
				console.log(data)
				if (!isUnique) alert("Category name already exists.");
			} catch {
				console.error("An error occurred while checking the category name uniqueness.");
			}
		});
	</script>
}