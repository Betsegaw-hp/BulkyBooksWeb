@model IEnumerable<Category>
@{
    ViewData["Title"] = "Category List";
}

<div class="text-center">
    <h1 class="display-4">Category List</h1>
    <p>Welcome to the Category List page. Here you can view all the categories available in our system.</p>
    <form id="bulkActionForm" method="post" action="@Url.Action("BulkDelete", "Category")">
        <button type="submit" class="btn btn-danger mb-3 bulk-delete-btn" style="float: left;">
            Delete Selected
        </button>
        <button type="button" class="btn btn-success mb-3" style="float: right;" data-bs-toggle="modal" data-bs-target=".modal-create-category">
            Create Category
        </button>
        <table class="table table-striped table-hover table-bordered">
            <thead class="table-dark">
                <tr>
                    <th style="width:10%; text-align:center; vertical-align:middle;">
                        <input type="checkbox" id="selectAll" style="margin:auto; display:block; width:24px; height:24px; accent-color:#198754; background-color:#fff; border:2px solid #198754;" />
                    </th>
                    <th style="width:20%; text-align:center;">ID</th>
                    <th style="width:40%; text-align:center;">Name</th>
                    <th style="width:10%; text-align:center;">Display Order</th>
                    <th style="width:20%; text-align:center;">Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var category in Model)
                {
                    <tr>
                        <td style="text-align:center; vertical-align:middle;">
                            <input type="checkbox" name="selectedCategoryIds" value="@category.Id" class="selectItem" style="margin:auto; display:block;" />
                        </td>
                        <td style="text-align:center; vertical-align:middle;">@category.Id</td>
                        <td style="vertical-align:middle;">
                            <a asp-controller="Category" asp-action="Detail" asp-route-id="@category.Id" class="btn btn-info btn-sm">
                                @category.Name
                            </a>
                        </td>
                        <td style="text-align:center; vertical-align:middle;">@category.DisplayOrder</td>
                        <td style="text-align:center; vertical-align:middle;">
                            <a asp-controller="Category" asp-action="Detail" asp-route-id="@category.Id" class="btn btn-primary btn-sm edit-button">Edit</a>
                            <form asp-controller="Category" asp-action="Delete" asp-route-id="@category.Id" method="post" class="d-inline">
                                <button type="submit" class="btn btn-danger btn-sm delete-category-btn" data-category-name="@category.Name">Delete</button>
                            </form>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </form>

    <!-- Include the partial view for the modal -->
    @await Html.PartialAsync("_CreateCategoryModal", new Category())
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        // Select All functionality
        document.getElementById('selectAll').addEventListener('change', function () {
            const checked = this.checked;
            document.querySelectorAll('.selectItem').forEach(cb => cb.checked = checked);
        });

        // Optional: Uncheck "Select All" if any item is unchecked
        document.querySelectorAll('.selectItem').forEach(cb => {
            cb.addEventListener('change', function () {
                if (!this.checked) {
                    document.getElementById('selectAll').checked = false;
                }
            });
        });

        // Existing uniqueness check script...
        document.getElementById("categoryName").addEventListener("blur", async function(e) {
            try {
                const res = await fetch(`/Category/IsCategoryNameUnique?name=${this.value}`);

                if (!res.ok) {
                    throw new Error("Network response was not ok");
                }
                const isUnique = await res.json();
                console.log(data)
                if (!isUnique) {
                    Swal.fire({
                        icon: 'warning',
                        title: 'Duplicate Category',
                        text: 'Category name already exists.',
                        confirmButtonText: 'OK'
                    });
                }
            } catch {
                console.error("An error occurred while checking the category name uniqueness.");
            }
        });

        // SweetAlert for delete category buttons
        document.addEventListener('DOMContentLoaded', function() {
            const deleteButtons = document.querySelectorAll('.delete-category-btn');
            deleteButtons.forEach(button => {
                button.addEventListener('click', function(e) {
                    e.preventDefault();
                    const categoryName = this.getAttribute('data-category-name');
                    const form = this.closest('form');
                    
                    Swal.fire({
                        title: 'Are you sure?',
                        text: `You want to delete category "${categoryName}"? This action cannot be undone!`,
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#dc3545',
                        cancelButtonColor: '#6c757d',
                        confirmButtonText: 'Yes, delete it!',
                        cancelButtonText: 'Cancel'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            form.submit();
                        }
                    });
                });
            });

            // SweetAlert for bulk delete
            const bulkDeleteBtn = document.querySelector('.bulk-delete-btn');
            if (bulkDeleteBtn) {
                bulkDeleteBtn.addEventListener('click', function(e) {
                    e.preventDefault();
                    const selectedItems = document.querySelectorAll('.selectItem:checked');
                    
                    if (selectedItems.length === 0) {
                        Swal.fire({
                            icon: 'warning',
                            title: 'No Selection',
                            text: 'Please select at least one category to delete.',
                            confirmButtonText: 'OK'
                        });
                        return;
                    }
                    
                    Swal.fire({
                        title: 'Are you sure?',
                        text: `You want to delete ${selectedItems.length} selected categories? This action cannot be undone!`,
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#dc3545',
                        cancelButtonColor: '#6c757d',
                        confirmButtonText: 'Yes, delete them!',
                        cancelButtonText: 'Cancel'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            this.closest('form').submit();
                        }
                    });
                });
            }
        });
    </script>
}